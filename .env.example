# TopDeck Environment Configuration Example
# Copy this file to .env and fill in your values

# ============================================
# Azure Configuration
# ============================================
AZURE_TENANT_ID=your-tenant-id
AZURE_CLIENT_ID=your-client-id
AZURE_CLIENT_SECRET=your-client-secret
AZURE_SUBSCRIPTION_ID=your-subscription-id

# ============================================
# Azure DevOps Configuration
# ============================================
AZURE_DEVOPS_ORGANIZATION=your-org
AZURE_DEVOPS_PROJECT=your-project
AZURE_DEVOPS_PAT=your-personal-access-token

# ============================================
# AWS Configuration
# ============================================
AWS_ACCESS_KEY_ID=your-access-key-id
AWS_SECRET_ACCESS_KEY=your-secret-access-key
AWS_REGION=us-east-1

# ============================================
# GCP Configuration
# ============================================
GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account.json
GCP_PROJECT_ID=your-project-id

# ============================================
# GitHub Configuration
# ============================================
GITHUB_TOKEN=your-github-token
GITHUB_ORGANIZATION=your-org

# ============================================
# Neo4j Configuration
# ============================================
NEO4J_URI=bolt://localhost:7687
# For encrypted connection, use: bolt+s://your-host:7687
NEO4J_USERNAME=neo4j
NEO4J_PASSWORD=your-neo4j-password
# Set to true to enable TLS encryption (auto-upgrades bolt:// to bolt+s://)
NEO4J_ENCRYPTED=false

# ============================================
# Redis Configuration
# ============================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your-redis-password
REDIS_DB=0
# Enable SSL/TLS encryption for Redis (use port 6380 for SSL)
REDIS_SSL=false
# SSL certificate verification: none, optional, required
REDIS_SSL_CERT_REQS=required

# ============================================
# RabbitMQ Configuration
# ============================================
RABBITMQ_HOST=localhost
RABBITMQ_PORT=5672
# For SSL, use port 5671
RABBITMQ_USERNAME=guest
RABBITMQ_PASSWORD=guest
# Enable SSL/TLS encryption for RabbitMQ
RABBITMQ_SSL=false

# ============================================
# Application Configuration
# ============================================
APP_ENV=development
APP_PORT=8000
API_KEY=your-api-key
JWT_SECRET=your-jwt-secret

# ============================================
# SSL/TLS Configuration for API Server
# ============================================
# Enable HTTPS for the API server (recommended for production)
SSL_ENABLED=false
# Path to SSL private key file
SSL_KEYFILE=/path/to/private.key
# Path to SSL certificate file
SSL_CERTFILE=/path/to/certificate.crt

# ============================================
# Monitoring Configuration
# ============================================
APPLICATIONINSIGHTS_CONNECTION_STRING=your-connection-string
DATADOG_API_KEY=your-datadog-api-key

# ============================================
# Feature Flags
# ============================================
ENABLE_AZURE_DISCOVERY=true
ENABLE_AWS_DISCOVERY=false
ENABLE_GCP_DISCOVERY=false
ENABLE_GITHUB_INTEGRATION=true
ENABLE_AZURE_DEVOPS_INTEGRATION=true
ENABLE_RISK_ANALYSIS=true
ENABLE_MONITORING=true

# ============================================
# Discovery Configuration
# ============================================
DISCOVERY_SCAN_INTERVAL=28800  # 8 hours in seconds (8 * 3600)
DISCOVERY_PARALLEL_WORKERS=5
DISCOVERY_TIMEOUT=300

# ============================================
# Cache Configuration
# ============================================
CACHE_TTL_RESOURCES=300
CACHE_TTL_RISK_SCORES=900
CACHE_TTL_TOPOLOGY=600

# ============================================
# Logging Configuration
# ============================================
LOG_LEVEL=INFO
LOG_FORMAT=json

# ============================================
# Request Configuration
# ============================================
REQUEST_TIMEOUT_SECONDS=30
MAX_REQUEST_SIZE_MB=10

# ============================================
# Rate Limiting Configuration
# ============================================
RATE_LIMIT_REQUESTS_PER_MINUTE=60
RATE_LIMIT_ENABLED=true
